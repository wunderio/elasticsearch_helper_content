<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexInterface;

/**
 * Implements hook_elasticsearch_helper_index_operation().
 *
 * Adds operations to Elasticsearch index plugins created by Elasticsearch
 * Helper Content module.
 *
 * @param \Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexInterface $plugin
 *
 * @return array
 */
function elasticsearch_helper_content_elasticsearch_helper_index_operation(ElasticsearchIndexInterface $plugin) {
  $definition = $plugin->getPluginDefinition();

  if (!empty($definition['content_index_entity_id'])) {
    $id = $plugin->getPluginId();

    $operations['edit'] = [
      'title' => t('Edit'),
      'weight' => 80,
      'url' => Url::fromRoute('entity.elasticsearch_content_index.edit_form', ['elasticsearch_content_index' => $id]),
    ];

    $operations['delete'] = [
      'title' => t('Delete'),
      'weight' => 140,
      'url' => Url::fromRoute('entity.elasticsearch_content_index.delete_form', ['elasticsearch_content_index' => $id]),
    ];

    return $operations;
  }

  return [];
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alters index view form and adds "elasticsearch_content_index" entity related
 * buttons.
 */
function elasticsearch_helper_content_form_elasticsearch_helper_index_management_index_view_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\elasticsearch_helper_content\ElasticsearchContentIndexFormHandler $form_handler */
  $form_handler = \Drupal::classResolver('\Drupal\elasticsearch_helper_content\ElasticsearchContentIndexFormHandler');

  $form_handler->alterIndexViewForm($form, $form_state);
}
