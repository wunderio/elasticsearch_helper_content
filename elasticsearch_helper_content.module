<?php

/**
 * @file
 * Versatile generic elasticsearch indexing for typical content entities.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\core\Entity\ContentEntityType;
use Drupal\core\Entity\EntityTypeInterface;

/**
 * Implements hook_entity_extra_field_info().
 */
function elasticsearch_helper_content_entity_extra_field_info() {
  $extra = [];

  // Declare search_result_excerpt extra field for all entities and bundles.
  $bundle_infos = \Drupal::service('entity_type.bundle.info')->getAllBundleInfo();
  $entity_type_definitions = \Drupal::service('entity_type.manager')->getDefinitions();
  /* @var $entity_type_definitions EntityTypeInterface */
  foreach ($entity_type_definitions as $entity_type_id => $entity_type_definition) {
    if ($entity_type_definition instanceof ContentEntityType) {
      if (empty($bundle_infos[$entity_type_id])) {
        $bundle_infos[$entity_type_id] = [$entity_type_id];
      }
      foreach ($bundle_infos[$entity_type_id] as $bundle_id => $bundle_info) {
        $extra[$entity_type_id][$bundle_id]['display']['search_result_excerpt'] = [
          'label' => t('Search result excerpt'),
          'description' => t('A placeholder for excerpt display on search_result view mode.'),
          'weight' => 100,
          'visible' => FALSE,
        ];
      }
    }
  }

  return $extra;
}

/**
 * Implements hook_entity_view().
 */
function elasticsearch_helper_content_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('search_result_excerpt')) {
    $build['search_result_excerpt'] = [
      '#markup' => elasticsearch_helper_content_get_excerpt_placeholder(),
    ];
  }
}

/**
 * Format an excerpt string.
 *
 * @param string $excerpt
 *   The excerpt to format.
 *
 * @return string
 *   The formatted excerpt markup.
 */
function elasticsearch_helper_content_get_excerpt_markup($excerpt) {
  return '<span class="search-result-excerpt">' . $excerpt . '</span>';
}

/**
 * Assembles an excerpt placeholder string.
 *
 * @return string
 *   The excerpt placeholder string.
 */
function elasticsearch_helper_content_get_excerpt_placeholder() {
  return elasticsearch_helper_content_get_excerpt_markup('This is a <em>placeholder</em> for Elasticsearch <em>result</em> highlights.');
}

